<?xml version="1.0" encoding="UTF-8"?>

<!--  
	스프링 스러운 웹 클라이언트 프로젝트

 -->
 
 <beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

	<!-- 스프링 소스를 스캔한다.  -->
	
	<context:component-scan annotation-config="true" base-package="com.openid.oauth.SimpleOauthTester"/>

	<!-- Bean to hold configuration properties -->
	
	<mvc:annotation-driven/>
	<mvc:default-servlet-handler />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>

	<!-- Resolve views based on string names -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>

	<bean id="authenticationService" class="com.openid.oauth.service.impl.AuthenticationServiceImpl"/>	
	
	<beans profile="local">
	
		<bean id="localConfig" class="com.openid.oauth.SimpleOauthTester.OAuthClientConfig">
			<!-- <constructor-args value ="4e76adcd-4136-4f2f-a64e-d06da21a5039"/> -->
			<constructor-arg value="1c3ad1a6-4271-4ad3-99d4-ae84b51b6e27"/>
			<constructor-arg value="dGjuzGxFGsF5gO-b8IA81jnDyLCvpKhHDQzALPeGVjOuaLLjbDg1YQU9u6fIaceUkM3DM3iB2MGC5rbFVQGbYQ"/>
			<constructor-arg value="http://10.10.30.196:50001"/>
			<constructor-arg value="http://localhost:50001"/>  <!--  test Resource Server -->
			<constructor-arg value="http://localhost:50011"/>  <!--  my URL -->
			
			<property name="scope" value="offline_access email profile phone openid uma_protection"/>
		</bean>
	</beans>
	
	<beans profile="dev">
		<bean id="devConfig" class="com.openid.oauth.SimpleOauthTester.OAuthClientConfig">
				<!-- <constructor-args value ="4e76adcd-4136-4f2f-a64e-d06da21a5039"/> -->
				<constructor-arg value="4e76adcd-4136-4f2f-a64e-d06da21a5039"/>
				<constructor-arg value="AJGrqh_Po9Fuyb3bVnhks2zMZy8V33RAuTAZYgITnpCi5sKwWUC8ZL4RDcRj0ZJUlYbAw2uDi6OXm0dgBeBmLJE"/>
				<constructor-arg value="http://10.10.30.196:50001"/>
				<constructor-arg value="http://localhost:50001"/>  <!--  test Resource Server -->
				<constructor-arg value="http://localhost:50011"/>  <!--  my URL -->
				
				<property name="scope" value="offline_access email profile phone openid uma_protection"/>
			</bean>
	</beans>
	
	<beans profile="op">
		<bean id="opConfig" class="com.openid.oauth.SimpleOauthTester.OAuthClientConfig">
			<!-- <constructor-args value ="4e76adcd-4136-4f2f-a64e-d06da21a5039"/> -->
			<constructor-arg value="4e76adcd-4136-4f2f-a64e-d06da21a5039"/>
			<constructor-arg value="AJGrqh_Po9Fuyb3bVnhks2zMZy8V33RAuTAZYgITnpCi5sKwWUC8ZL4RDcRj0ZJUlYbAw2uDi6OXm0dgBeBmLJE"/>
			<constructor-arg value="http://10.10.30.196:50001"/>
			<constructor-arg value="http://localhost:50001"/>  <!--  test Resource Server -->
			<constructor-arg value="http://localhost:50011"/>  <!--  my URL -->
			
			<property name="scope" value="offline_access email profile phone openid uma_protection"/>
		</bean>
	</beans>
	

			  
<!-- 	<import resource="local-config.xml"/>
	<import resource="dev-config.xml"/>
	<import resource="op-config.xml"/> -->
	
	
	<!-- 
		bean 객체 기반으로 필요하다면 위의 설정에서 order를 2로 넣어야됨. 
		Resolve views based on string names -->
	

  	<!-- <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>  -->
		
</beans>